<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.lms.springboot.jdbc.IProfService">

	<!-- 강의 목록 출력-->
	<select id="userList" resultType="com.lms.springboot.jdbc.ProfDTO" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		<!-- SELECT * FROM USER_INFO u
		JOIN LECTURE l ON u.user_id = l.prof_id
		WHERE u.user_id = #{user_id} -->
		
		SELECT user_id, user_name, lecture_name, lecture_code FROM 
		    user_info u INNER JOIN lecture l
		    ON u.user_id = l.prof_id
		    WHERE prof_id =#{user_id}
	</select>
	
	<!-- 강의 목록 -->
	<select id="getLectureTotalCount" resultType="int" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT COUNT(*) FROM BOARDS
		WHERE lecture_code = #{lecture_code}
	</select>
	<select id="lectureBoardListPage" resultType="com.lms.springboot.jdbc.ProfDTO" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				<!-- SELECT * FROM 
					 user_info u INNER JOIN BOARDS b
   					 ON u.user_id = b.user_id
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY lecture_idx DESC -->
				SELECT * FROM BOARDS 
				WHERE lecture_code =#{lecture_code}
                
                
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
	
	<!-- 수강생 리스트 -->
	<select id="getStudentTotalCount" resultType="int" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
			SELECT COUNT(*) FROM 
			    user_info u LEFT JOIN enroll e on u.user_id = e.user_id
			    WHERE e.lecture_code = #{lecture_code}

	</select>
	<select id="studentBoardListPage" resultType="com.lms.springboot.jdbc.ProfDTO" >
			<!-- SELECT * FROM 
			    user_info u LEFT JOIN enroll e on u.user_id = e.user_id
			    WHERE e.lecture_code = #{lecture_code} -->
			    
			    SELECT * FROM (
					SELECT Tb.*, rownum rNum FROM (
						SELECT * FROM 
							user_info u LEFT JOIN enroll e on u.user_id = e.user_id
					    WHERE e.lecture_code = #{lecture_code}
						ORDER BY u.user_id DESC
					) Tb
				)
				WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
	
	<!-- 출석부 -->
	<select id="getAbsentBoardTotalCount" resultType="int" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT COUNT(*) FROM ABSENTS
		<if test="searchKeyword!=null and !searchKeyword.equals('')">
			WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
		</if>
	</select>
	<select id="absentBoardListPage" resultType="com.lms.springboot.jdbc.ProfDTO" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM ABSENTS
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY USER_ID ASC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>

	<!-- 과제 -->
	<select id="getAssignmentTotalCount" resultType="int" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT COUNT(*) FROM assignment
		WHERE lecture_code = #{lecture_code}
	</select>
	<select id="assignmentBoardListPage" resultType="com.lms.springboot.jdbc.ProfDTO" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		<!-- SELECT * FROM 
		    assignment a LEFT JOIN lecture l ON a.lecture_code = l.lecture_code
		    WHERE a.lecture_code =  #{lectureCode}
		    ORDER BY ASSIGNMENT_IDX desc -->
		    SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM 
					assignment a LEFT JOIN lecture l ON a.lecture_code = l.lecture_code
					WHERE a.lecture_code =  #{lecture_code}
					ORDER BY ASSIGNMENT_IDX desc
				) Tb
			)
			WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	<insert id="lectureUploadProcProf">
		INSERT INTO assignment (ASSIGNMENT_IDX, ASSIGNMENT_TITLE, ASSIGNMENT_CONTENT, UPLOADED_DATE, DEADLINE, LECTURE_CODE)
		VALUES
		(seq_serial_num.nextval, #{_title}, #{_content}, sysdate, #{_deadline} ,#{_lectureCode})
	</insert>
	<select id="assignmentView" resultType="com.lms.springboot.jdbc.ProfDTO" 
		parameterType="com.lms.springboot.jdbc.ProfDTO">
		SELECT * FROM assignment WHERE assignment_idx = #{assignment_idx}
	</select>
	<update id="assignmentEdit" parameterType="com.lms.springboot.jdbc.ProfDTO">
		UPDATE assignment SET
		assignment_title=#{assignment_title}, assignment_content=#{assignment_content}, deadline=#{deadline}
		WHERE assignment_idx=#{assignment_idx}
	</update>
	<delete id="assignmentDelete">
    	DELETE FROM assignment WHERE assignment_idx=#{param1}
    </delete>
	
</mapper>