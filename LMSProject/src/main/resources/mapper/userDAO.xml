<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lms.springboot.jdbc.IUserService">
	<select id="getTotalLectureCount" resultType="int"
		parameterType="com.lms.springboot.jdbc.UserListParameterDTO">
			SELECT COUNT(*) FROM lecture
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				WHERE #{ searchField } LIKE '%'||#{searchKeyword}||'%'
			</if>
			
	</select>

	<select id="selectAllLecture" resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT 
			lecture_idx,
			lecture_name,
			prof_id,
			lecture_start_date,
			lecture_end_date,
			lecture_code,
			u.major_id,
			u.user_name
			
		FROM lecture l, user_info u
		WHERE l.prof_id = u.user_id
	</select>
	
	<select id="selectAllLecturePage" resultType="com.lms.springboot.jdbc.UserDTO" 
		parameterType="com.lms.springboot.jdbc.UserListParameterDTO">
		SELECT 
			lecture_idx,
			lecture_name,
			prof_id,
			lecture_start_date,
			lecture_end_date,
			lecture_code,
			major_name,
			user_name
		FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT
				 lecture_idx,
				 lecture_name,
				 prof_id,
				 lecture_start_date,
				 lecture_end_date,
				 lecture_code,
				 l.major_id,
                 major_name,
				 u.user_name
				FROM lecture l, user_info u, majors m
				WHERE l.prof_id = u.user_id
                AND l.major_id = m.major_id
                <if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY lecture_idx DESC
			) Tb	
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
	<select id="selectAllMyLecture" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="String">
		SELECT 
			lecture_idx,
			lecture_name,
			prof_id,
			lecture_start_date,
			lecture_end_date,
			l.lecture_code,
			u.major_id,
			u.user_name
		FROM lecture l, user_info u,
        (SELECT lecture_code, u.user_id, u.user_name 
          FROM enroll e, user_info u
          WHERE e.user_id = u.user_id
          ) s
		WHERE l.prof_id = u.user_id
         AND l.lecture_code = s.lecture_code
         AND s.user_id = #{ user_id }
	</select>
	
	<select id="selectOneLecture" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="String">
		SELECT 
			lecture_idx,
			lecture_name,
			prof_id,
			lecture_start_date,
			lecture_end_date,
			lecture_code,
			u.major_id,
			u.user_name
		FROM lecture l, user_info u
		WHERE l.prof_id = u.user_id AND lecture_code=#{lecture_code}
	</select>
	
<!-- 	<select id="validateUser" resultType="int" -->
<!-- 		parameterType="com.lms.springboot.jdbc.UserDTO"> -->
<!-- 		SELECT COUNT(*) FROM enroll WHERE user_id=#{ user_id } AND lecture_code=#{ lecture_code }  -->
<!-- 	</select> -->
	
<!-- 	유저 -->
	<select id="selectAllUser" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="String">
		SELECT * FROM user_info
	</select>
	
	<select id="selectOneUser" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="String">
		SELECT * FROM user_info WHERE user_id=#{ user_id }
	</select>
		
	<update id="updateUser" parameterType="com.lms.springboot.jdbc.UserDTO">
		UPDATE user_info
		 SET
		  user_name = #{ user_name },
		  user_pw = #{ user_pw },
		  saveFile = #{ saveFile },
		  originalFile = #{ originalFile }
		WHERE user_id = #{ user_id }
	</update>
	
<!-- 	강의세션 -->
	<select id="selectLectureSessionList" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="String">
		SELECT * FROM boards 
		 WHERE category='L' AND lecture_code=#{ lecture_code }
	</select>

	<select id="selectOneBoard" parameterType="com.lms.springboot.jdbc.UserDTO"
		resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT 
			board_idx,
			b.user_id,
			user_name,
			lecture_code,
			category,
			board_title,
			board_content,
			board_postdate,
			visitCount,
			board_like
		FROM boards b, user_info u
		 WHERE b.user_id = u.user_id
		  AND category=#{ category } AND board_idx=#{ board_idx }
	</select>
	
	<select id="duplicationEnrollCheck" parameterType="com.lms.springboot.jdbc.UserDTO"
		resultType="int">
		SELECT COUNT(*) FROM enroll
		 WHERE user_id=#{ user_id } AND lecture_code=#{ lecture_code }
	</select>
	
	<insert id="insertEnroll" parameterType="com.lms.springboot.jdbc.UserDTO">
		INSERT INTO enroll (user_id, lecture_code, enroll_idx)
			VALUES(
				#{ user_id },
				#{ lecture_code },
				seq_serial_num.nextval
			)
	</insert>
	
	<select id="selectAllMyAssignmentList" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="com.lms.springboot.jdbc.UserListParameterDTO">
		SELECT 
			assignment_idx,
			a.lecture_code,
			l.lecture_name,
			p.user_name,
			assignment_title
		 FROM assignment a, lecture l, user_info p, 
         (SELECT l.lecture_code FROM LECTURE l, enroll e
                WHERE l.lecture_code = e.lecture_code
                 AND e.user_id = '20251038'

                 ) s
		 WHERE a.lecture_code = l.lecture_code
            AND l.prof_id = p.user_id
            AND l.lecture_code = s.lecture_code
         <if test="searchKeyword!=null and !searchKeyword.equals('')">
			AND ${searchField} LIKE '%'||#{searchKeyword}||'%'
		 </if>
	</select>
	
	<select id="selectOneAssignment" parameterType="int"
		resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT 
			assignment_idx,
			assignment_title,
			assignment_content,
			uploaded_date,
			deadline,
			a.lecture_code,
			lecture_name,
			user_name
		 FROM assignment a, lecture l, user_info u
		 WHERE
		 	a.lecture_code = l.lecture_code
		 	AND l.prof_id = u.user_id
		 	AND assignment_idx=#{ assignment_idx }
	</select>
	
	<insert id="insertAssignmentSubmit" parameterType="com.lms.springboot.jdbc.UserDTO">
		INSERT INTO assignment_submit 
			(
				assignment_idx,
				assignment_submit_idx,
				assignment_content_s,
				assignment_ofile,
				assignment_sfile,
				user_id
			)
			VALUES
			(
				#{ assignment_idx },
				seq_serial_num.nextval,
				#{ assignment_content_s },
				#{ assignment_ofile },
				#{ assignment_sfile },
				#{ user_id }
			)
	</insert>
	
	<select id="selectOneAssignmentSubmit" parameterType="com.lms.springboot.jdbc.UserDTO"
		resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT 
		 lecture_name,
		 user_name, 
		 assignment_title,
		 assignment_content,
		 assignment_content_s,
		 assignment_ofile,
		 assignment_sfile,
		 score
		FROM assignment a, assignment_submit s, lecture l, user_info u
		WHERE
			a.assignment_idx = s.assignment_idx
			AND a.lecture_code = l.lecture_code
			AND l.prof_id = u.user_id
		 	AND s.user_id = #{ user_id }
	</select>
	
	<select id="submitCheck" parameterType="com.lms.springboot.jdbc.UserDTO"
		resultType="int">
		SELECT COUNT(*)
		 FROM assignment_submit
		 WHERE 
		  user_id=#{ user_id }
		  AND assignment_idx=#{ assignment_idx }
	</select>
	
	<select id="selectAllBoardListPage" resultType="com.lms.springboot.jdbc.UserDTO"
		parameterType="com.lms.springboot.jdbc.UserListParameterDTO">
		SELECT 
			board_idx,
			user_id,
			user_name,
			category,
			board_title,
			board_postdate,
			visitCount,
			board_like
		 FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT
				 board_idx,
				 b.user_id,
				 user_name,
				 category,
				 board_title,
				 board_postdate,
				 visitCount,
				 board_like
				FROM boards b, user_info u
				WHERE b.user_id = u.user_id
					AND category=#{ category }
                <if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND #{searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY board_idx DESC
			) Tb	
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
<!-- 	<select id="selectOneLMSBoard" parameterType="int" -->
<!-- 		resultType="com.lms.springboot.jdbc.UserDTO"> -->
<!-- 		SELECT  -->
<!-- 		 lecture_name, -->
<!-- 		 user_name,  -->
<!-- 		 assignment_title, -->
<!-- 		 assignment_content, -->
<!-- 		 assignment_content_s, -->
<!-- 		 assignment_ofile, -->
<!-- 		 assignment_sfile, -->
<!-- 		 score -->
<!-- 		FROM assignment a, assignment_submit s, lecture l, user_info u -->
<!-- 		WHERE -->
<!-- 			a.assignment_idx = s.assignment_idx -->
<!-- 			AND a.lecture_code = l.lecture_code -->
<!-- 			AND l.prof_id = u.user_id -->
<!-- 		 	AND s.user_id = #{ user_id } -->
<!-- 	</select> -->
	
	<insert id="insertBoard" parameterType="com.lms.springboot.jdbc.UserDTO">
		INSERT INTO boards 
			(
				board_idx,
				user_id,
				lecture_code,
				board_title,
				board_content,
				board_postdate,
				downCount,
				visitCount,
				category,
				bGroup,
				bStep,
				bIndent,
				board_like		
			)
			VALUES
			(
				seq_serial_num.nextval,
				#{ user_id },
				<choose>
					<when test='lecture_code != null'>
						#{ lecture_code },					
					</when>
					<otherwise>
						null,
					</otherwise>
				</choose>
				#{ board_title },
				#{ board_content },
				sysdate,
				0,
				0,
				#{ category },
				seq_serial_num.currval,
				0,
				0,
				0
			)
			<selectKey keyProperty="board_idx" resultType="int" order="AFTER">
				SELECT seq_serial_num.currval FROM dual
			</selectKey>
	</insert>

	<select id="getTotalBoardCount" resultType="int"
		parameterType="com.lms.springboot.jdbc.UserListParameterDTO">
			SELECT COUNT(*) FROM boards
			WHERE category=#{ category }
			<if test="searchKeyword != null and !searchKeyword.equals('')">
				AND #{ searchField } LIKE '%'||#{searchKeyword}||'%'
			</if>
	</select>
	
	<insert id="insertFiles" parameterType="java.util.List">
			INSERT INTO files (
				board_idx,
				ofile,
				sfile,
				file_idx
			)
			SELECT Tb.*, seq_serial_num.nextval as file_idx 
			FROM(
				<foreach collection="list" item="row" separator="UNION ALL">
					SELECT 
						#{ row.board_idx } as board_idx,
						#{ row.ofile } as ofile,
						#{ row.sfile } as sfile
					FROM dual
				</foreach>
			) Tb
	</insert>
	
	<insert id="insertFile" parameterType="com.lms.springboot.jdbc.UserDTO">
			INSERT INTO files (
				board_idx,
				ofile,
				sfile,
				file_idx
			)
			VALUES(
				#{ board_idx },
				#{ ofile },
				#{ sfile },
				seq_serial_num.nextval
			)
	</insert>
	
	<select id="selectFiles" parameterType="int"
		resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT * FROM files
		 WHERE board_idx=#{ board_idx }	
	</select>
	
	<select id="selectOneFile" parameterType="String"
		resultType="com.lms.springboot.jdbc.UserDTO">
		SELECT * FROM files
		 WHERE sfile=#{ sfile }	
	</select>
</mapper>