<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lms.springboot.jdbc.ILectureService">

	<select id="getTotalLectureCount" resultType="int"
		parameterType="com.lms.springboot.jdbc.ParameterDTO">
		SELECT COUNT(*) FROM LECTURE
		<if test="search_Keyword!=null and !search_Keyword.equals('')">
			WHERE
            <choose>
                <when test="search_Field == 'LECTURE_NAME'">LECTURE_NAME LIKE '%'||#{search_Keyword}||'%'</when>
                <when test="search_Field == 'PROF_ID'">PROF_ID LIKE '%'||#{search_Keyword}||'%'</when>
                <otherwise>LECTURE_NAME LIKE '%'||#{search_Keyword}||'%'</otherwise>
            </choose>
		</if>
	</select>

	<select id="listLecturePage" resultType="com.lms.springboot.jdbc.LectureBoardDTO"
		parameterType="com.lms.springboot.jdbc.ParameterDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT LECTURE_IDX, LECTURE_NAME, PROF_ID, LECTURE_START_DATE, LECTURE_END_DATE, LECTURE_CODE, MAJOR_ID
				FROM LECTURE
				<if test="search_Keyword!=null and !search_Keyword.equals('')">
					WHERE
                    <choose>
                        <when test="search_Field == 'LECTURE_NAME'">LECTURE_NAME LIKE '%'||#{search_Keyword}||'%'</when>
                        <when test="search_Field == 'PROF_ID'">PROF_ID LIKE '%'||#{search_Keyword}||'%'</when>
                        <otherwise>LECTURE_NAME LIKE '%'||#{search_Keyword}||'%'</otherwise>
                    </choose>
				</if>
				ORDER BY LECTURE_IDX DESC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>

	<insert id="insertLecture" parameterType="com.lms.springboot.jdbc.LectureBoardDTO">
		INSERT INTO LECTURE (LECTURE_IDX, LECTURE_NAME, PROF_ID, LECTURE_START_DATE, LECTURE_END_DATE, LECTURE_CODE, MAJOR_ID)
		VALUES (
            (SELECT NVL(MAX(LECTURE_IDX), 0) + 1 FROM LECTURE),
            #{lecture_Name},
            #{prof_Id},
            #{lecture_Start_Date},
            #{lecture_End_Date},
            #{lecture_Code},
            #{major_Id}
        )
	</insert>

	<select id="viewLecture" resultType="com.lms.springboot.jdbc.LectureBoardDTO"
		parameterType="com.lms.springboot.jdbc.LectureBoardDTO">
		SELECT LECTURE_IDX, LECTURE_NAME, PROF_ID, LECTURE_START_DATE, LECTURE_END_DATE, LECTURE_CODE, MAJOR_ID
		FROM LECTURE
		WHERE LECTURE_IDX = #{lecture_Idx}
	</select>

	<update id="updateLecture" parameterType="com.lms.springboot.jdbc.LectureBoardDTO">
		UPDATE LECTURE SET
		    LECTURE_NAME = #{lecture_Name},
            PROF_ID = #{prof_Id},
            LECTURE_START_DATE = #{lecture_Start_Date},
            LECTURE_END_DATE = #{lecture_End_Date},
            LECTURE_CODE = #{lecture_Code},
            MAJOR_ID = #{major_Id}
		WHERE LECTURE_IDX = #{lecture_Idx}
	</update>

	<delete id="deleteLecture" parameterType="String">
    	DELETE FROM LECTURE WHERE LECTURE_IDX = #{lecture_Idx} 
    </delete>
</mapper>