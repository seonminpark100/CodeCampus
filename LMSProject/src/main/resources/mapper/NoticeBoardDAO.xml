<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lms.springboot.jdbc.INoticeService">

    <select id="getTotalNoticeCount" resultType="int" parameterType="com.lms.springboot.jdbc.ParameterDTO2">
        SELECT COUNT(*) FROM BOARDS
        <where>
            CATEGORY = 'N' <if test="search_Field != null and search_Keyword != null and search_Keyword != ''">
                <choose>
                    <when test="search_Field == 'BOARD_TITLE'">
                        AND BOARD_TITLE LIKE '%' || #{search_Keyword} || '%'
                    </when>
                    <when test="search_Field == 'USER_ID'">
                        AND USER_ID LIKE '%' || #{search_Keyword} || '%'
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <select id="listNoticePage" resultType="com.lms.springboot.jdbc.NoticeBoardDTO" parameterType="com.lms.springboot.jdbc.ParameterDTO2">
        SELECT * FROM (
            SELECT Tb.*, ROWNUM rNum FROM (
                SELECT
                    BOARD_IDX, USER_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_POSTDATE, VISITCOUNT, CATEGORY
                FROM BOARDS
                <where>
                    CATEGORY = 'N' <if test="search_Field != null and search_Keyword != null and search_Keyword != ''">
                        <choose>
                            <when test="search_Field == 'BOARD_TITLE'">
                                AND BOARD_TITLE LIKE '%' || #{search_Keyword} || '%'
                            </when>
                            <when test="search_Field == 'USER_ID'">
                                AND USER_ID LIKE '%' || #{search_Keyword} || '%'
                            </when>
                        </choose>
                    </if>
                </where>
                ORDER BY BOARD_IDX DESC
            ) Tb
        )
        WHERE rNum BETWEEN #{start} AND #{end}
    </select>

    <insert id="insertNotice" parameterType="com.lms.springboot.jdbc.NoticeBoardDTO">
	    <selectKey keyProperty="board_Idx" resultType="int" order="BEFORE">
	        SELECT BOARDS_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO BOARDS (
	        BOARD_IDX, USER_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_POSTDATE, VISITCOUNT, CATEGORY, BGROUP, BSTEP, BINDENT, BOARD_LIKE
	    ) VALUES (
	        #{board_Idx},
	        #{user_Id},
	        #{board_Title},
	        #{board_Content, jdbcType=VARCHAR},
	        SYSDATE,
	        0,
	        #{category},
	        0,  0,  0,  0   )
	</insert>

    <select id="viewNotice" resultType="com.lms.springboot.jdbc.NoticeBoardDTO" parameterType="int">
        SELECT BOARD_IDX, USER_ID, BOARD_TITLE, BOARD_CONTENT, BOARD_POSTDATE, VISITCOUNT, CATEGORY
        FROM BOARDS
        WHERE BOARD_IDX = #{board_Idx} AND CATEGORY = 'N' </select>

    <update id="updateVisitCount" parameterType="int">
        UPDATE BOARDS SET VISITCOUNT = VISITCOUNT + 1 WHERE BOARD_IDX = #{board_Idx} AND CATEGORY = 'N' </update>

    <update id="updateNotice" parameterType="com.lms.springboot.jdbc.NoticeBoardDTO">
    UPDATE BOARDS SET
        BOARD_TITLE = #{board_Title},      BOARD_CONTENT = #{board_Content},  USER_ID = #{user_Id}  WHERE BOARD_IDX = #{board_Idx} AND CATEGORY = 'N'
	</update>

    <delete id="deleteNotice" parameterType="int">
        DELETE FROM BOARDS WHERE BOARD_IDX = #{board_Idx} AND CATEGORY = 'N' </delete>

</mapper>