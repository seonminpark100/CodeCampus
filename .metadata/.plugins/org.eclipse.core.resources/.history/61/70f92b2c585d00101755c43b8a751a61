<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.lms.springboot.prof.IProfService">

	<!-- 강의 목록 출력-->
	<select id="userList" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		<!-- SELECT * FROM USER_INFO u
		JOIN LECTURE l ON u.user_id = l.prof_id
		WHERE u.user_id = #{user_id} -->
		
		SELECT user_id, user_name, lecture_name, lecture_code FROM 
		    user_info u INNER JOIN lecture l
		    ON u.user_id = l.prof_id
		    WHERE prof_id =#{user_id}
	</select>
	
	<!-- 강의 목록 -->
	<select id="getLectureTotalCount" resultType="int" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT COUNT(*) FROM BOARDS
		WHERE lecture_code = #{lecture_code} AND category = 'L'
		<if test="searchKeyword!=null and !searchKeyword.equals('')">
			AND LOWER(${searchField}) LIKE LOWER('%'||#{searchKeyword}||'%')
		</if>
	</select>
	<select id="lectureBoardListPage" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM boards b
				    LEFT JOIN Lecture l ON b.lecture_code = l.lecture_code
				    WHERE l.lecture_code =#{lecture_code} AND category = 'L'
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND LOWER(b.${searchField}) LIKE LOWER('%'||#{searchKeyword}||'%')
				</if>
				ORDER BY board_idx DESC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
<!-- 		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM boards b
				    LEFT JOIN Lecture l ON b.lecture_code = l.lecture_code
				    WHERE l.lecture_code =#{lecture_code} AND category = 'L'
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					AND b.${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY board_idx DESC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end} -->
	</select>
	<select id="lectureUploadPage" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT *  FROM 
		    user_info u INNER JOIN lecture l
		    ON u.user_id = l.prof_id
		    WHERE l.lecture_code = #{lecture_code}
	</select>
	<insert id="insertLectureWithoutFile" parameterType="com.lms.springboot.prof.ProfDTO">
		<selectKey keyProperty="board_idx" resultType="String" order="BEFORE">
			SELECT seq_serial_num.nextval FROM dual
		</selectKey>
			INSERT INTO boards (BOARD_IDX, USER_ID, LECTURE_CODE, BOARD_TITLE, BOARD_CONTENT, CATEGORY)
			VALUES (#{board_idx}, #{user_id}, #{lecture_code}, #{board_title}, #{board_content} , #{category})
	</insert>
	<insert id="insertLectureWithFile" parameterType="com.lms.springboot.prof.ProfDTO">
			INSERT INTO files (BOARD_IDX, OFILE, SFILE, FILE_IDX)
			VALUES (#{board_idx}, #{ofile}, #{sfile}, seq_serial_num.nextval)
<!-- 	<choose>
		<when test="sfile!=null and !sfile.equals('')">
		</when>
		<otherwise>
			INSERT INTO boards (BOARD_IDX, USER_ID, LECTURE_CODE, BOARD_TITLE, BOARD_CONTENT, CATEGORY)
			VALUES (seq_serial_num.nextval, #{user_id}, #{lecture_code}, #{board_title}, #{board_content} , #{category})
		</otherwise>
	</choose> -->
	</insert>
	<select id="lectureViewWithFile" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT * FROM 
	        boards b INNER JOIN files f
	        ON b.board_idx = f.board_idx
			WHERE b.board_idx = #{board_idx}
	</select>
	<select id="lectureViewWithoutFile" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT * FROM boards WHERE board_idx = #{board_idx}
	</select>

	<update id="lectureEditBoards" parameterType="com.lms.springboot.prof.ProfDTO">
		UPDATE boards SET
		board_title=#{board_title}, board_content=#{board_content}, category=#{category}
		WHERE board_idx=#{board_idx}
	</update>
	<update id="lectureEditFiles" parameterType="com.lms.springboot.prof.ProfDTO">
		UPDATE files SET
		OFILE=#{ofile}, SFILE=#{sfile}
		WHERE board_idx=#{board_idx} AND file_idx =#{file_idx}
	</update>
	
	
	<delete id="lectureDeleteBoards">
    	DELETE FROM boards WHERE board_idx=#{param1}
    </delete>
    <delete id="lectureDeleteFiles">
    	DELETE FROM files WHERE board_idx=#{param1}
    </delete>
	
	
	<!-- 수강생 리스트 -->
	<select id="getStudentTotalCount" resultType="int" 
		parameterType="com.lms.springboot.prof.ProfDTO">
			SELECT COUNT(*) FROM 
			    user_info u LEFT JOIN enroll e on u.user_id = e.user_id
			    WHERE e.lecture_code = #{lecture_code}

	</select>
	<select id="studentBoardListPage" resultType="com.lms.springboot.prof.ProfDTO" >
			<!-- SELECT * FROM 
			    user_info u LEFT JOIN enroll e on u.user_id = e.user_id
			    WHERE e.lecture_code = #{lecture_code} -->
			    
			    SELECT * FROM (
					SELECT Tb.*, rownum rNum FROM (
						SELECT * FROM 
							user_info u LEFT JOIN enroll e on u.user_id = e.user_id
					    WHERE e.lecture_code = #{lecture_code}
						ORDER BY u.user_id DESC
					) Tb
				)
				WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>
	
	
	<!-- 출석부 -->
	<select id="getAbsentBoardTotalCount" resultType="int" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT COUNT(*) FROM ABSENTS
		<if test="searchKeyword!=null and !searchKeyword.equals('')">
			WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
		</if>
	</select>
	<select id="absentBoardListPage" resultType="com.lms.springboot.prof.ProfDTO" 
		parameterType="com.lms.springboot.prof.ProfDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM ABSENTS
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY USER_ID ASC
			) Tb
		)
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>

	
    <!-- 출석 -->
	<insert id="absentProcProf">
		INSERT INTO absents (ABSENT_IDX, LECTURE_CODE, USER_ID, absent_state, LECTURE_DATE, ATTENDANCE_TIME)
		VALUES
		(seq_serial_num.nextval, #{_lectureCode}, #{_user_id},#{_absent_state} ,sysdate ,sysdate)
	</insert>	
</mapper>