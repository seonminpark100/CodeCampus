package model2.mvcboard;

import java.io.IOException;

import fileupload.FileUtil;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import model2.lecture.LectureDAO;
import model2.lecture.LectureDTO;
import utils.JSFunction;

@WebServlet("/mvcboard/uploadlecture.do")
public class UploadLectureController extends HttpServlet
{
	private static final long serialVersionUID = 1L; // 없으면 경고 뜸
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException
	{
		req.getRequestDispatcher("/14MVCBoard/UploadLecture.jsp").forward(req, resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException
	{
		String saveDirectory = req.getServletContext().getRealPath("Uploads");
		
		String originalFileName = "";
		
		try
		{
			originalFileName = FileUtil.uploadFile(req, saveDirectory);
		} catch (Exception e)
		{
			JSFunction.alertLocation(resp, "파일업로드 오류 입니다.", "../mvcboard/write.do");
			return; // return 을 통해 반드시 실행을 중지시켜줘야 함.
		}
		
		LectureDTO dto = new LectureDTO();
		dto.setName(req.getParameter("name"));
		dto.setTitle(req.getParameter("title"));
		dto.setContent(req.getParameter("content"));
		dto.setPass(req.getParameter("pass"));
		
		if(originalFileName != "") {
//			첨부파일이 있을 경우 파일명 변경
			String savedFileName = FileUtil.renameFile(saveDirectory, originalFileName);
			
			dto.setOfile(originalFileName);
			dto.setSfile(savedFileName);
		}
		
		LectureDAO dao = new LectureDAO();
		int result = dao.insertLecture(dto);
		dao.close();
		
		if(result == 1) {
			resp.sendRedirect("../mvcboard/lecturelist.do");
		} else {
			JSFunction.alertLocation(resp,"글쓰기에 실패했습니다.", "../mvcboard/uploadlecture.do");
		}
		
		
	}
}
